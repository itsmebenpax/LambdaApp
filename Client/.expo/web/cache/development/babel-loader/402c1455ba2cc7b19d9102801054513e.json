{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nexport default {\n  getusers: function getusers() {\n    var res;\n    return _regeneratorRuntime.async(function getusers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('http://localhost:9000/api/user/'));\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  },\n  login: function login(data) {\n    var res;\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.post('http://localhost:9000/api/user/login', data));\n\n          case 2:\n            res = _context2.sent;\n            console.log(res);\n            return _context2.abrupt(\"return\", res);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  },\n  tester: function tester() {\n    var res;\n    return _regeneratorRuntime.async(function tester$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(axios.get('http://localhost:9000/api/user/tester'));\n\n          case 2:\n            res = _context3.sent;\n            console.log(res);\n            return _context3.abrupt(\"return\", res);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/mortenskovgaard/Documents/lambda/App/Client/Services/userServices.js"],"names":["axios","getusers","get","res","login","data","post","console","log","tester"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAc;AACVC,EAAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUD,KAAK,CAACE,GAAN,CAAU,iCAAV,CADV;;AAAA;AACFC,YAAAA,GADE;AAAA,6CAECA,GAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADA;AAMVC,EAAAA,KAAK,EAAE,eAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACaL,KAAK,CAACM,IAAN,CAAW,sCAAX,EAAmDD,IAAnD,CADb;;AAAA;AACCF,YAAAA,GADD;AAEHI,YAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAFG,8CAGIA,GAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GANG;AAaVM,EAAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYT,KAAK,CAACE,GAAN,CAAU,uCAAV,CADZ;;AAAA;AACAC,YAAAA,GADA;AAEJI,YAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AAFI,8CAGGA,GAHH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbE,CAAd","sourcesContent":["import axios from 'axios';\n\nexport default{\n    getusers: async() => {\n        let res = await axios.get('http://localhost:9000/api/user/');\n        return res;\n    },\n\n    login: async (data) => {\n        let res = await axios.post('http://localhost:9000/api/user/login', data);\n        console.log(res)\n        return res;\n\n    },\n\n    tester: async() => {\n        let res = await axios.get('http://localhost:9000/api/user/tester');\n        console.log(res);\n        return res;\n    }\n}"]},"metadata":{},"sourceType":"module"}